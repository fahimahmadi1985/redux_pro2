{"version":3,"sources":["App.js","index.js"],"names":["App","className","this","props","data","cookCake","numberOfCookedCake","buyCake","numberOfSoldCake","onClick","dispBuyCake","dispCookCake","Component","Actions","mainReducer","combineReducers","state","type","store","createStore","Root","document","getElementById","render","getState","console","log","ReactDOM","dispatch","subscribe"],"mappings":"4NA+CeA,EA7Cf,iLAEI,OACE,yBAAKC,UAAU,yHACb,wBAAIA,UAAU,SAAd,yBACyB,IACvB,0BAAMA,UAAU,gBACbC,KAAKC,MAAMC,KAAKC,SAASC,qBAG9B,wBAAIL,UAAU,SAAd,uBACuB,IACrB,0BAAMA,UAAU,gBACbC,KAAKC,MAAMC,KAAKG,QAAQC,mBAG7B,wBAAIP,UAAU,SAAd,kBACkB,IAChB,0BAAMA,UAAU,gBACb,IACAC,KAAKC,MAAMC,KAAKC,SAASC,mBACxBJ,KAAKC,MAAMC,KAAKG,QAAQC,mBAI9B,4BACEC,QACEP,KAAKC,MAAMC,KAAKC,SAASC,mBACvBJ,KAAKC,MAAMC,KAAKG,QAAQC,kBAAoBN,KAAKC,MAAMO,YAE3DT,UAAU,2CALZ,aASA,4BACEQ,QAASP,KAAKC,MAAMQ,aACpBV,UAAU,sCAFZ,kBAlCR,GAAyBW,a,OCInBC,EAAU,CACdN,QAAS,WACTF,SAAU,aAwCZ,IAAMS,EAAcC,YAAgB,CAClCR,QAzBF,WAAmE,IAA1CS,EAAyC,uDAAjC,CAAER,iBAAkB,GACnD,QADgE,wCACjDS,MACb,IAAK,WACH,MAAgB,CACdT,iBAAkBQ,EAAMR,iBAAmB,GAE/C,QACE,OAAOQ,IAmBXX,SAdF,WAAsE,IAA5CW,EAA2C,uDAAnC,CAAEV,mBAAoB,GACtD,QADmE,wCACpDW,MACb,IAAK,YACH,MAAgB,CACdX,mBAAoBU,EAAMV,mBAAqB,GAEnD,QACE,OAAOU,MAWPE,EAAQC,YAAYL,GAEpBM,EAAOC,SAASC,eAAe,QAC/BC,EAAS,WACb,IAAInB,EAAOc,EAAMM,WACjBC,QAAQC,IAAIR,EAAMM,WAAWnB,SAASC,oBACtCqB,IAASJ,OACP,kBAAC,EAAD,CACEnB,KAAMA,EACNM,YAAa,WACXQ,EAAMU,SAnDL,CACLX,KAAMJ,EAAQN,WAoDZI,aAAc,WACZO,EAAMU,SAjDL,CACLX,KAAMJ,EAAQR,cAmDde,IAIJG,IACAL,EAAMW,UAAUN,K","file":"static/js/main.90ec000a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"container m-5 p-5 bg-secondary border border-1 rounded border-info text-white d-flex justify-content-center flex-wrap\">\n        <h4 className=\"col-4\">\n          Number of Cooked Cake:{\" \"}\n          <span className=\"text-warning\">\n            {this.props.data.cookCake.numberOfCookedCake}\n          </span>\n        </h4>\n        <h4 className=\"col-4\">\n          Number of Sold Cake:{\" \"}\n          <span className=\"text-warning\">\n            {this.props.data.buyCake.numberOfSoldCake}\n          </span>\n        </h4>\n        <h4 className=\"col-4\">\n          Number of Cake:{\" \"}\n          <span className=\"text-warning\">\n            {\" \"}\n            {this.props.data.cookCake.numberOfCookedCake -\n              this.props.data.buyCake.numberOfSoldCake}\n          </span>\n        </h4>\n\n        <button\n          onClick={\n            this.props.data.cookCake.numberOfCookedCake -\n              this.props.data.buyCake.numberOfSoldCake && this.props.dispBuyCake\n          }\n          className=\"btn btn-dark text-white col-4 mr-5 mt-5\"\n        >\n          Sell Cake\n        </button>\n        <button\n          onClick={this.props.dispCookCake}\n          className=\"btn btn-dark text-white col-4 mt-5\"\n        >\n          Cook Cake\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { combineReducers } from \"redux\";\n\nconst Actions = {\n  buyCake: \"BUY_CAKE\",\n  cookCake: \"COOK_CAKE\"\n};\n\n//create Action\nfunction buyCake(text) {\n  return {\n    type: Actions.buyCake\n  };\n}\nfunction cookCake(text) {\n  return {\n    type: Actions.cookCake\n  };\n}\n\n//create reducer1\nfunction reducer_buyCake(state = { numberOfSoldCake: 0 }, action) {\n  switch (action.type) {\n    case \"BUY_CAKE\":\n      return (state = {\n        numberOfSoldCake: state.numberOfSoldCake + 1\n      });\n    default:\n      return state;\n  }\n}\n\n//create reducer2\nfunction reducer_cookCake(state = { numberOfCookedCake: 0 }, action) {\n  switch (action.type) {\n    case \"COOK_CAKE\":\n      return (state = {\n        numberOfCookedCake: state.numberOfCookedCake + 1\n      });\n    default:\n      return state;\n  }\n}\n\n//combine reducers\nconst mainReducer = combineReducers({\n  buyCake: reducer_buyCake,\n  cookCake: reducer_cookCake\n});\n\n//create store\nconst store = createStore(mainReducer);\n\nconst Root = document.getElementById(\"root\");\nconst render = () => {\n  var data = store.getState();\n  console.log(store.getState().cookCake.numberOfCookedCake);\n  ReactDOM.render(\n    <App\n      data={data}\n      dispBuyCake={() => {\n        store.dispatch(buyCake());\n      }}\n      dispCookCake={() => {\n        store.dispatch(cookCake());\n      }}\n    />,\n    Root\n  );\n};\n\nrender();\nstore.subscribe(render);\n"],"sourceRoot":""}